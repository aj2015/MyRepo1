<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Yahoo" duration-ms="130" started-at="2015-03-13T21:10:22Z" finished-at="2015-03-13T21:10:23Z">
    <groups>
    </groups>
    <test name="Yahoo Mail Test " duration-ms="10" started-at="2015-03-13T21:10:22Z" finished-at="2015-03-13T21:10:22Z">
      <class name="test.YahooTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.YahooTest@7907ec20]" name="beforeTest" is-config="true" duration-ms="10" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.YahooTest@7907ec20]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.YahooTest@7907ec20]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testSendMail()[pri:0, instance:test.YahooTest@7907ec20]" name="testSendMail" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendMail -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.YahooTest@7907ec20]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.YahooTest@7907ec20]" name="afterTest" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.YahooTest@7907ec20]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testReceivedMail()[pri:0, instance:test.YahooTest@7907ec20]" name="testReceivedMail" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReceivedMail -->
      </class> <!-- test.YahooTest -->
    </test> <!-- Yahoo Mail Test  -->
    <test name="Yahoo News Test" duration-ms="0" started-at="2015-03-13T21:10:23Z" finished-at="2015-03-13T21:10:23Z">
      <class name="test.YahooNewsTest">
        <test-method status="FAIL" signature="testNews()[pri:0, instance:test.YahooNewsTest@c818063]" name="testNews" duration-ms="0" started-at="2015-03-14T08:10:23Z" finished-at="2015-03-14T08:10:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Good1] but found [Good]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Good1] but found [Good]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at test.YahooNewsTest.testNews(YahooNewsTest.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNews -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.YahooNewsTest@c818063]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:23Z" finished-at="2015-03-14T08:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
      </class> <!-- test.YahooNewsTest -->
    </test> <!-- Yahoo News Test -->
    <test name="Yahoo Registration Test" duration-ms="10" started-at="2015-03-13T21:10:23Z" finished-at="2015-03-13T21:10:23Z">
      <class name="test.YahooTest">
        <test-method status="PASS" signature="initializeSelenium()[pri:0, instance:test.YahooTest@7907ec20]" name="initializeSelenium" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:22Z" finished-at="2015-03-14T08:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSelenium -->
        <test-method status="PASS" signature="shutdownSelenium()[pri:0, instance:test.YahooTest@7907ec20]" name="shutdownSelenium" is-config="true" duration-ms="0" started-at="2015-03-14T08:10:23Z" finished-at="2015-03-14T08:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutdownSelenium -->
      </class> <!-- test.YahooTest -->
      <class name="test.YahooRegistrationTest">
        <test-method status="PASS" signature="testRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.YahooRegistrationTest@56cbfb61]" name="testRegister" duration-ms="0" started-at="2015-03-14T08:10:23Z" data-provider="registerData" finished-at="2015-03-14T08:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Email1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[City1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.YahooRegistrationTest@56cbfb61]" name="testRegister" duration-ms="0" started-at="2015-03-14T08:10:23Z" data-provider="registerData" finished-at="2015-03-14T08:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Email3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[City3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="PASS" signature="testRegister(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:test.YahooRegistrationTest@56cbfb61]" name="testRegister" duration-ms="0" started-at="2015-03-14T08:10:23Z" data-provider="registerData" finished-at="2015-03-14T08:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[User2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Email2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[City2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
      </class> <!-- test.YahooRegistrationTest -->
    </test> <!-- Yahoo Registration Test -->
  </suite> <!-- Yahoo -->
</testng-results>
